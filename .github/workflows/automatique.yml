name: Script quotidien marée et météo

on:
  schedule:
    - cron: '0 6 * * *'  # Tous les jours à 6h UTC
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # 1) On clone ton dépôt
      - name: Récupérer le dépôt
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2) On installe R
      - name: Installer R
        uses: r-lib/actions/setup-r@v2

      # 3) On installe Python 3.10
      - name: Installer Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 4) On installe Miniconda (via Mambaforge pour la rapidité)
      - name: Installer Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Mambaforge
          activate-environment: false
          python-version: "3.10"
          channels: conda-forge

      # 5) On installe eccodes dans base avec mamba (rapide)
      - name: Installer eccodes via conda
        run: |
          mamba install -c conda-forge eccodes -y

      # 6) On expose le dossier des binaires conda pour tout le job
      - name: Ajouter conda/bin au PATH
        run: echo "/usr/share/miniconda/Library/bin" >> $GITHUB_PATH

      # 7) Dépendances système pour terra + R
      - name: Installer dépendances système
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgdal-dev libproj-dev libgeos-dev libudunits2-dev \
            libpng-dev

      # 8) Dépendances Python
      - name: Installer copernicusmarine
        run: |
          python -m pip install --upgrade pip
          pip install copernicusmarine

      # 9) Dépendances R
      - name: Installer les packages R
        run: |
          Rscript -e "install.packages(c(
            'reticulate','terra','tidyr',
            'httr','rvest','ncdf4','raster','dplyr','stringr','jsonlite','sp'
          ), repos='https://cloud.r-project.org')"

      # 10) On expose la librairie R custom à Rscript (optionnel si tu veux forcer .libPaths())
      - name: Exposer R_LIBS_USER
        run: |
          R_LIB=$(Rscript -e '.libPaths()[1]' --vanilla)
          echo "R_LIBS_USER=${R_LIB}" >> $GITHUB_ENV

      # 11) Exécution de ton script
      - name: Exécuter le script R
        env:
          CMEMS_USER:    ${{ secrets.CMEMS_USER }}
          CMEMS_PWD:     ${{ secrets.CMEMS_PWD }}
          DATA_PUSH_TOKEN: ${{ secrets.DATA_PUSH_TOKEN }}
          # PATH et R_LIBS_USER ont été définis dans les étapes précédentes
        run: |
          Rscript script3.R

      # 12) Commit + push dans le dépôt principal
      - name: Commit du CSV généré
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add zos_points.csv data_meteo.csv
          git commit -m "Ajout automatique des CSV" || echo "Rien à committer"
          git push

      # 13) Push vers le dépôt privé de données
      - name: Push vers maree-donnees
        run: |
          git clone https://x-access-token:${{ secrets.DATA_PUSH_TOKEN }}@github.com/ahulin/maree-donnees.git data-push
          cp zos_points.csv data_meteo.csv data-push/
          cd data-push
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add zos_points.csv data_meteo.csv
          git commit -m "Mise à jour quotidienne des CSV" || echo "Rien à committer"
          git push
